<?xml version="1.0" encoding="utf-8" ?>
<persistence xmlns="https://jakarta.ee/xml/ns/persistence" version="3.0">
    <persistence-unit name="exampleJPA" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <class>org.codexdei.hibernateapp.entity.Customer</class>
        <class>org.codexdei.hibernateapp.entity.Invoice</class>
<!--        solo las clases que esten mapeadas, si quitamos la linea anterior marcaria error-->
        <exclude-unlisted-classes>true</exclude-unlisted-classes>
        <properties>
            <property name="jakarta.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/java_hibernate_curso?serverTimezone=America/Bogota"/>
            <property name="jakarta.persistence.jdbc.user" value="root"/>
            <property name="jakarta.persistence.jdbc.password" value="admin"/>
            <property name="jakarta.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect"/>
            <property name="hibernate.show_sql" value="true"/>
            <!-- IMPORTANTE: al usar "drop-and-create" el proveedor JPA elimina el esquema existente y lo recrea
                 desde los mapeos de las entidades al iniciar la unidad de persistencia (provoca pérdida de datos).
                 Úsalo solo en desarrollo/pruebas; en producción usa 'none' o gestiona cambios con migraciones (Flyway/Liquibase). -->
            <property name="jakarta.persistence.schema-generation.database.action" value="drop-and-create"/>
        </properties>
    </persistence-unit>
</persistence>